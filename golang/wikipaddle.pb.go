// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        (unknown)
// source: wikipaddle.proto

package apiv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetGuidesCollectionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page int32 `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
}

func (x *GetGuidesCollectionRequest) Reset() {
	*x = GetGuidesCollectionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wikipaddle_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGuidesCollectionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGuidesCollectionRequest) ProtoMessage() {}

func (x *GetGuidesCollectionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_wikipaddle_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGuidesCollectionRequest.ProtoReflect.Descriptor instead.
func (*GetGuidesCollectionRequest) Descriptor() ([]byte, []int) {
	return file_wikipaddle_proto_rawDescGZIP(), []int{0}
}

func (x *GetGuidesCollectionRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

type GetGuidesCollectionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pagination *Pagination            `protobuf:"bytes,1,opt,name=pagination,proto3" json:"pagination,omitempty"`
	Guides     []*GuideCollectionItem `protobuf:"bytes,2,rep,name=guides,proto3" json:"guides,omitempty"`
}

func (x *GetGuidesCollectionResponse) Reset() {
	*x = GetGuidesCollectionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wikipaddle_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGuidesCollectionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGuidesCollectionResponse) ProtoMessage() {}

func (x *GetGuidesCollectionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_wikipaddle_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGuidesCollectionResponse.ProtoReflect.Descriptor instead.
func (*GetGuidesCollectionResponse) Descriptor() ([]byte, []int) {
	return file_wikipaddle_proto_rawDescGZIP(), []int{1}
}

func (x *GetGuidesCollectionResponse) GetPagination() *Pagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *GetGuidesCollectionResponse) GetGuides() []*GuideCollectionItem {
	if x != nil {
		return x.Guides
	}
	return nil
}

type GuideCollectionItemPhoto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Url string `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
}

func (x *GuideCollectionItemPhoto) Reset() {
	*x = GuideCollectionItemPhoto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wikipaddle_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuideCollectionItemPhoto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuideCollectionItemPhoto) ProtoMessage() {}

func (x *GuideCollectionItemPhoto) ProtoReflect() protoreflect.Message {
	mi := &file_wikipaddle_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuideCollectionItemPhoto.ProtoReflect.Descriptor instead.
func (*GuideCollectionItemPhoto) Descriptor() ([]byte, []int) {
	return file_wikipaddle_proto_rawDescGZIP(), []int{2}
}

func (x *GuideCollectionItemPhoto) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

type GuideCollectionItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                string                      `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Title             string                      `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Country           string                      `protobuf:"bytes,3,opt,name=country,proto3" json:"country,omitempty"`
	State             string                      `protobuf:"bytes,4,opt,name=state,proto3" json:"state,omitempty"`
	LocalizedDistance string                      `protobuf:"bytes,5,opt,name=localizedDistance,proto3" json:"localizedDistance,omitempty"`
	StarRating        string                      `protobuf:"bytes,6,opt,name=starRating,proto3" json:"starRating,omitempty"`
	Photos            []*GuideCollectionItemPhoto `protobuf:"bytes,7,rep,name=photos,proto3" json:"photos,omitempty"`
}

func (x *GuideCollectionItem) Reset() {
	*x = GuideCollectionItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wikipaddle_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuideCollectionItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuideCollectionItem) ProtoMessage() {}

func (x *GuideCollectionItem) ProtoReflect() protoreflect.Message {
	mi := &file_wikipaddle_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuideCollectionItem.ProtoReflect.Descriptor instead.
func (*GuideCollectionItem) Descriptor() ([]byte, []int) {
	return file_wikipaddle_proto_rawDescGZIP(), []int{3}
}

func (x *GuideCollectionItem) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GuideCollectionItem) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *GuideCollectionItem) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *GuideCollectionItem) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *GuideCollectionItem) GetLocalizedDistance() string {
	if x != nil {
		return x.LocalizedDistance
	}
	return ""
}

func (x *GuideCollectionItem) GetStarRating() string {
	if x != nil {
		return x.StarRating
	}
	return ""
}

func (x *GuideCollectionItem) GetPhotos() []*GuideCollectionItemPhoto {
	if x != nil {
		return x.Photos
	}
	return nil
}

type GetCurrentUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetCurrentUserRequest) Reset() {
	*x = GetCurrentUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wikipaddle_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCurrentUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCurrentUserRequest) ProtoMessage() {}

func (x *GetCurrentUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_wikipaddle_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCurrentUserRequest.ProtoReflect.Descriptor instead.
func (*GetCurrentUserRequest) Descriptor() ([]byte, []int) {
	return file_wikipaddle_proto_rawDescGZIP(), []int{4}
}

type Pagination struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CurrentPage  int32 `protobuf:"varint,1,opt,name=currentPage,proto3" json:"currentPage,omitempty"`
	PerPage      int32 `protobuf:"varint,2,opt,name=perPage,proto3" json:"perPage,omitempty"`
	TotalResults int32 `protobuf:"varint,3,opt,name=totalResults,proto3" json:"totalResults,omitempty"`
	TotalPages   int32 `protobuf:"varint,4,opt,name=totalPages,proto3" json:"totalPages,omitempty"`
}

func (x *Pagination) Reset() {
	*x = Pagination{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wikipaddle_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Pagination) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pagination) ProtoMessage() {}

func (x *Pagination) ProtoReflect() protoreflect.Message {
	mi := &file_wikipaddle_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pagination.ProtoReflect.Descriptor instead.
func (*Pagination) Descriptor() ([]byte, []int) {
	return file_wikipaddle_proto_rawDescGZIP(), []int{5}
}

func (x *Pagination) GetCurrentPage() int32 {
	if x != nil {
		return x.CurrentPage
	}
	return 0
}

func (x *Pagination) GetPerPage() int32 {
	if x != nil {
		return x.PerPage
	}
	return 0
}

func (x *Pagination) GetTotalResults() int32 {
	if x != nil {
		return x.TotalResults
	}
	return 0
}

func (x *Pagination) GetTotalPages() int32 {
	if x != nil {
		return x.TotalPages
	}
	return 0
}

type UserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *UserRequest) Reset() {
	*x = UserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wikipaddle_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserRequest) ProtoMessage() {}

func (x *UserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_wikipaddle_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserRequest.ProtoReflect.Descriptor instead.
func (*UserRequest) Descriptor() ([]byte, []int) {
	return file_wikipaddle_proto_rawDescGZIP(), []int{6}
}

func (x *UserRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type User struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	FirstName string `protobuf:"bytes,2,opt,name=firstName,proto3" json:"firstName,omitempty"`
	LastName  string `protobuf:"bytes,3,opt,name=lastName,proto3" json:"lastName,omitempty"`
	FullName  string `protobuf:"bytes,4,opt,name=fullName,proto3" json:"fullName,omitempty"`
	AvatarUrl string `protobuf:"bytes,5,opt,name=avatarUrl,proto3" json:"avatarUrl,omitempty"`
}

func (x *User) Reset() {
	*x = User{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wikipaddle_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *User) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*User) ProtoMessage() {}

func (x *User) ProtoReflect() protoreflect.Message {
	mi := &file_wikipaddle_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use User.ProtoReflect.Descriptor instead.
func (*User) Descriptor() ([]byte, []int) {
	return file_wikipaddle_proto_rawDescGZIP(), []int{7}
}

func (x *User) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *User) GetFirstName() string {
	if x != nil {
		return x.FirstName
	}
	return ""
}

func (x *User) GetLastName() string {
	if x != nil {
		return x.LastName
	}
	return ""
}

func (x *User) GetFullName() string {
	if x != nil {
		return x.FullName
	}
	return ""
}

func (x *User) GetAvatarUrl() string {
	if x != nil {
		return x.AvatarUrl
	}
	return ""
}

type UserResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User *User `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
}

func (x *UserResponse) Reset() {
	*x = UserResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wikipaddle_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserResponse) ProtoMessage() {}

func (x *UserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_wikipaddle_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserResponse.ProtoReflect.Descriptor instead.
func (*UserResponse) Descriptor() ([]byte, []int) {
	return file_wikipaddle_proto_rawDescGZIP(), []int{8}
}

func (x *UserResponse) GetUser() *User {
	if x != nil {
		return x.User
	}
	return nil
}

type GuideRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GuideRequest) Reset() {
	*x = GuideRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wikipaddle_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuideRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuideRequest) ProtoMessage() {}

func (x *GuideRequest) ProtoReflect() protoreflect.Message {
	mi := &file_wikipaddle_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuideRequest.ProtoReflect.Descriptor instead.
func (*GuideRequest) Descriptor() ([]byte, []int) {
	return file_wikipaddle_proto_rawDescGZIP(), []int{9}
}

func (x *GuideRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GuideResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Guide *Guide `protobuf:"bytes,1,opt,name=guide,proto3" json:"guide,omitempty"`
}

func (x *GuideResponse) Reset() {
	*x = GuideResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wikipaddle_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuideResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuideResponse) ProtoMessage() {}

func (x *GuideResponse) ProtoReflect() protoreflect.Message {
	mi := &file_wikipaddle_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuideResponse.ProtoReflect.Descriptor instead.
func (*GuideResponse) Descriptor() ([]byte, []int) {
	return file_wikipaddle_proto_rawDescGZIP(), []int{10}
}

func (x *GuideResponse) GetGuide() *Guide {
	if x != nil {
		return x.Guide
	}
	return nil
}

type LatLng struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Latitude  float64 `protobuf:"fixed64,1,opt,name=latitude,proto3" json:"latitude,omitempty"`
	Longitude float64 `protobuf:"fixed64,2,opt,name=longitude,proto3" json:"longitude,omitempty"`
}

func (x *LatLng) Reset() {
	*x = LatLng{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wikipaddle_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LatLng) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LatLng) ProtoMessage() {}

func (x *LatLng) ProtoReflect() protoreflect.Message {
	mi := &file_wikipaddle_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LatLng.ProtoReflect.Descriptor instead.
func (*LatLng) Descriptor() ([]byte, []int) {
	return file_wikipaddle_proto_rawDescGZIP(), []int{11}
}

func (x *LatLng) GetLatitude() float64 {
	if x != nil {
		return x.Latitude
	}
	return 0
}

func (x *LatLng) GetLongitude() float64 {
	if x != nil {
		return x.Longitude
	}
	return 0
}

type Guide struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                string  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Title             string  `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Description       string  `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Url               string  `protobuf:"bytes,5,opt,name=url,proto3" json:"url,omitempty"`
	StartLatLng       *LatLng `protobuf:"bytes,6,opt,name=startLatLng,proto3" json:"startLatLng,omitempty"`
	EndLatLng         *LatLng `protobuf:"bytes,7,opt,name=endLatLng,proto3" json:"endLatLng,omitempty"`
	Polyline          []byte  `protobuf:"bytes,8,opt,name=polyline,proto3" json:"polyline,omitempty"`
	Country           string  `protobuf:"bytes,9,opt,name=country,proto3" json:"country,omitempty"`
	State             string  `protobuf:"bytes,10,opt,name=state,proto3" json:"state,omitempty"`
	LocalizedDistance string  `protobuf:"bytes,11,opt,name=localizedDistance,proto3" json:"localizedDistance,omitempty"`
	CommentsCount     int32   `protobuf:"varint,12,opt,name=commentsCount,proto3" json:"commentsCount,omitempty"`
	UploadsCount      int32   `protobuf:"varint,13,opt,name=uploadsCount,proto3" json:"uploadsCount,omitempty"`
	StarRating        string  `protobuf:"bytes,14,opt,name=starRating,proto3" json:"starRating,omitempty"`
}

func (x *Guide) Reset() {
	*x = Guide{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wikipaddle_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Guide) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Guide) ProtoMessage() {}

func (x *Guide) ProtoReflect() protoreflect.Message {
	mi := &file_wikipaddle_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Guide.ProtoReflect.Descriptor instead.
func (*Guide) Descriptor() ([]byte, []int) {
	return file_wikipaddle_proto_rawDescGZIP(), []int{12}
}

func (x *Guide) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Guide) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Guide) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Guide) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *Guide) GetStartLatLng() *LatLng {
	if x != nil {
		return x.StartLatLng
	}
	return nil
}

func (x *Guide) GetEndLatLng() *LatLng {
	if x != nil {
		return x.EndLatLng
	}
	return nil
}

func (x *Guide) GetPolyline() []byte {
	if x != nil {
		return x.Polyline
	}
	return nil
}

func (x *Guide) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *Guide) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *Guide) GetLocalizedDistance() string {
	if x != nil {
		return x.LocalizedDistance
	}
	return ""
}

func (x *Guide) GetCommentsCount() int32 {
	if x != nil {
		return x.CommentsCount
	}
	return 0
}

func (x *Guide) GetUploadsCount() int32 {
	if x != nil {
		return x.UploadsCount
	}
	return 0
}

func (x *Guide) GetStarRating() string {
	if x != nil {
		return x.StarRating
	}
	return ""
}

type FitnessActivity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name        string  `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	StartLatLng *LatLng `protobuf:"bytes,3,opt,name=startLatLng,proto3" json:"startLatLng,omitempty"`
	EndLatLng   *LatLng `protobuf:"bytes,4,opt,name=endLatLng,proto3" json:"endLatLng,omitempty"`
	Polyline    []byte  `protobuf:"bytes,5,opt,name=polyline,proto3" json:"polyline,omitempty"`
}

func (x *FitnessActivity) Reset() {
	*x = FitnessActivity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wikipaddle_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FitnessActivity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FitnessActivity) ProtoMessage() {}

func (x *FitnessActivity) ProtoReflect() protoreflect.Message {
	mi := &file_wikipaddle_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FitnessActivity.ProtoReflect.Descriptor instead.
func (*FitnessActivity) Descriptor() ([]byte, []int) {
	return file_wikipaddle_proto_rawDescGZIP(), []int{13}
}

func (x *FitnessActivity) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *FitnessActivity) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *FitnessActivity) GetStartLatLng() *LatLng {
	if x != nil {
		return x.StartLatLng
	}
	return nil
}

func (x *FitnessActivity) GetEndLatLng() *LatLng {
	if x != nil {
		return x.EndLatLng
	}
	return nil
}

func (x *FitnessActivity) GetPolyline() []byte {
	if x != nil {
		return x.Polyline
	}
	return nil
}

type GuideComment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Body          string `protobuf:"bytes,2,opt,name=body,proto3" json:"body,omitempty"`
	UserFullName  string `protobuf:"bytes,3,opt,name=userFullName,proto3" json:"userFullName,omitempty"`
	UserAvatarUrl string `protobuf:"bytes,4,opt,name=userAvatarUrl,proto3" json:"userAvatarUrl,omitempty"`
	CreatedAt     string `protobuf:"bytes,5,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	StarRating    int32  `protobuf:"varint,6,opt,name=starRating,proto3" json:"starRating,omitempty"`
}

func (x *GuideComment) Reset() {
	*x = GuideComment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wikipaddle_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuideComment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuideComment) ProtoMessage() {}

func (x *GuideComment) ProtoReflect() protoreflect.Message {
	mi := &file_wikipaddle_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuideComment.ProtoReflect.Descriptor instead.
func (*GuideComment) Descriptor() ([]byte, []int) {
	return file_wikipaddle_proto_rawDescGZIP(), []int{14}
}

func (x *GuideComment) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GuideComment) GetBody() string {
	if x != nil {
		return x.Body
	}
	return ""
}

func (x *GuideComment) GetUserFullName() string {
	if x != nil {
		return x.UserFullName
	}
	return ""
}

func (x *GuideComment) GetUserAvatarUrl() string {
	if x != nil {
		return x.UserAvatarUrl
	}
	return ""
}

func (x *GuideComment) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *GuideComment) GetStarRating() int32 {
	if x != nil {
		return x.StarRating
	}
	return 0
}

type GetGuideCommentsCollectionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GuideId string `protobuf:"bytes,1,opt,name=guideId,proto3" json:"guideId,omitempty"`
	Page    int32  `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
}

func (x *GetGuideCommentsCollectionRequest) Reset() {
	*x = GetGuideCommentsCollectionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wikipaddle_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGuideCommentsCollectionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGuideCommentsCollectionRequest) ProtoMessage() {}

func (x *GetGuideCommentsCollectionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_wikipaddle_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGuideCommentsCollectionRequest.ProtoReflect.Descriptor instead.
func (*GetGuideCommentsCollectionRequest) Descriptor() ([]byte, []int) {
	return file_wikipaddle_proto_rawDescGZIP(), []int{15}
}

func (x *GetGuideCommentsCollectionRequest) GetGuideId() string {
	if x != nil {
		return x.GuideId
	}
	return ""
}

func (x *GetGuideCommentsCollectionRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

type GetGuideCommentsCollectionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pagination *Pagination     `protobuf:"bytes,1,opt,name=pagination,proto3" json:"pagination,omitempty"`
	Comments   []*GuideComment `protobuf:"bytes,2,rep,name=comments,proto3" json:"comments,omitempty"`
}

func (x *GetGuideCommentsCollectionResponse) Reset() {
	*x = GetGuideCommentsCollectionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wikipaddle_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGuideCommentsCollectionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGuideCommentsCollectionResponse) ProtoMessage() {}

func (x *GetGuideCommentsCollectionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_wikipaddle_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGuideCommentsCollectionResponse.ProtoReflect.Descriptor instead.
func (*GetGuideCommentsCollectionResponse) Descriptor() ([]byte, []int) {
	return file_wikipaddle_proto_rawDescGZIP(), []int{16}
}

func (x *GetGuideCommentsCollectionResponse) GetPagination() *Pagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *GetGuideCommentsCollectionResponse) GetComments() []*GuideComment {
	if x != nil {
		return x.Comments
	}
	return nil
}

type CreateGuideCommentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GuideId    string `protobuf:"bytes,1,opt,name=guideId,proto3" json:"guideId,omitempty"`
	Body       string `protobuf:"bytes,2,opt,name=body,proto3" json:"body,omitempty"`
	StarRating int32  `protobuf:"varint,3,opt,name=starRating,proto3" json:"starRating,omitempty"`
}

func (x *CreateGuideCommentRequest) Reset() {
	*x = CreateGuideCommentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wikipaddle_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateGuideCommentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateGuideCommentRequest) ProtoMessage() {}

func (x *CreateGuideCommentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_wikipaddle_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateGuideCommentRequest.ProtoReflect.Descriptor instead.
func (*CreateGuideCommentRequest) Descriptor() ([]byte, []int) {
	return file_wikipaddle_proto_rawDescGZIP(), []int{17}
}

func (x *CreateGuideCommentRequest) GetGuideId() string {
	if x != nil {
		return x.GuideId
	}
	return ""
}

func (x *CreateGuideCommentRequest) GetBody() string {
	if x != nil {
		return x.Body
	}
	return ""
}

func (x *CreateGuideCommentRequest) GetStarRating() int32 {
	if x != nil {
		return x.StarRating
	}
	return 0
}

var File_wikipaddle_proto protoreflect.FileDescriptor

var file_wikipaddle_proto_rawDesc = []byte{
	0x0a, 0x10, 0x77, 0x69, 0x6b, 0x69, 0x70, 0x61, 0x64, 0x64, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x11, 0x77, 0x69, 0x6b, 0x69, 0x70, 0x61, 0x64, 0x64, 0x6c, 0x65, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x76, 0x31, 0x22, 0x30, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x47, 0x75, 0x69, 0x64,
	0x65, 0x73, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x22, 0x9c, 0x01, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x47,
	0x75, 0x69, 0x64, 0x65, 0x73, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x77, 0x69,
	0x6b, 0x69, 0x70, 0x61, 0x64, 0x64, 0x6c, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e,
	0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69,
	0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3e, 0x0a, 0x06, 0x67, 0x75, 0x69, 0x64, 0x65, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x77, 0x69, 0x6b, 0x69, 0x70, 0x61, 0x64,
	0x64, 0x6c, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x75, 0x69, 0x64, 0x65,
	0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x06,
	0x67, 0x75, 0x69, 0x64, 0x65, 0x73, 0x22, 0x2c, 0x0a, 0x18, 0x47, 0x75, 0x69, 0x64, 0x65, 0x43,
	0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x50, 0x68, 0x6f,
	0x74, 0x6f, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x75, 0x72, 0x6c, 0x22, 0xfe, 0x01, 0x0a, 0x13, 0x47, 0x75, 0x69, 0x64, 0x65, 0x43, 0x6f,
	0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x14, 0x0a, 0x05,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x12, 0x2c, 0x0a, 0x11, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x44,
	0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x6c,
	0x6f, 0x63, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x44, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65,
	0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67,
	0x12, 0x43, 0x0a, 0x06, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x2b, 0x2e, 0x77, 0x69, 0x6b, 0x69, 0x70, 0x61, 0x64, 0x64, 0x6c, 0x65, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x75, 0x69, 0x64, 0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x52, 0x06, 0x70,
	0x68, 0x6f, 0x74, 0x6f, 0x73, 0x22, 0x17, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x43, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x8c,
	0x01, 0x0a, 0x0a, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x0a,
	0x0b, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0b, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x67, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x70, 0x65, 0x72, 0x50, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x07, 0x70, 0x65, 0x72, 0x50, 0x61, 0x67, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0c, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x12, 0x1e, 0x0a,
	0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x61, 0x67, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x61, 0x67, 0x65, 0x73, 0x22, 0x1d, 0x0a,
	0x0b, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x8a, 0x01, 0x0a,
	0x04, 0x55, 0x73, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x66, 0x69, 0x72, 0x73, 0x74, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x66, 0x69, 0x72, 0x73, 0x74, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x66, 0x75, 0x6c, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x66, 0x75, 0x6c, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x61,
	0x76, 0x61, 0x74, 0x61, 0x72, 0x55, 0x72, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x55, 0x72, 0x6c, 0x22, 0x3b, 0x0a, 0x0c, 0x55, 0x73, 0x65,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2b, 0x0a, 0x04, 0x75, 0x73, 0x65,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x77, 0x69, 0x6b, 0x69, 0x70, 0x61,
	0x64, 0x64, 0x6c, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72,
	0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x22, 0x1e, 0x0a, 0x0c, 0x47, 0x75, 0x69, 0x64, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x3f, 0x0a, 0x0d, 0x47, 0x75, 0x69, 0x64, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x05, 0x67, 0x75, 0x69, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x77, 0x69, 0x6b, 0x69, 0x70, 0x61, 0x64,
	0x64, 0x6c, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x75, 0x69, 0x64, 0x65,
	0x52, 0x05, 0x67, 0x75, 0x69, 0x64, 0x65, 0x22, 0x42, 0x0a, 0x06, 0x4c, 0x61, 0x74, 0x4c, 0x6e,
	0x67, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x08, 0x6c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x12, 0x1c, 0x0a,
	0x09, 0x6c, 0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x09, 0x6c, 0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x22, 0xbb, 0x03, 0x0a, 0x05,
	0x47, 0x75, 0x69, 0x64, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x10, 0x0a,
	0x03, 0x75, 0x72, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12,
	0x3b, 0x0a, 0x0b, 0x73, 0x74, 0x61, 0x72, 0x74, 0x4c, 0x61, 0x74, 0x4c, 0x6e, 0x67, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x77, 0x69, 0x6b, 0x69, 0x70, 0x61, 0x64, 0x64, 0x6c,
	0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x61, 0x74, 0x4c, 0x6e, 0x67, 0x52,
	0x0b, 0x73, 0x74, 0x61, 0x72, 0x74, 0x4c, 0x61, 0x74, 0x4c, 0x6e, 0x67, 0x12, 0x37, 0x0a, 0x09,
	0x65, 0x6e, 0x64, 0x4c, 0x61, 0x74, 0x4c, 0x6e, 0x67, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x19, 0x2e, 0x77, 0x69, 0x6b, 0x69, 0x70, 0x61, 0x64, 0x64, 0x6c, 0x65, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x61, 0x74, 0x4c, 0x6e, 0x67, 0x52, 0x09, 0x65, 0x6e, 0x64, 0x4c,
	0x61, 0x74, 0x4c, 0x6e, 0x67, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6f, 0x6c, 0x79, 0x6c, 0x69, 0x6e,
	0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x70, 0x6f, 0x6c, 0x79, 0x6c, 0x69, 0x6e,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x12, 0x2c, 0x0a, 0x11, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x44, 0x69,
	0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x6c, 0x6f,
	0x63, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x44, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12,
	0x24, 0x0a, 0x0d, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x73,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x75, 0x70, 0x6c,
	0x6f, 0x61, 0x64, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x74, 0x61,
	0x72, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73,
	0x74, 0x61, 0x72, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x22, 0xc7, 0x01, 0x0a, 0x0f, 0x46, 0x69,
	0x74, 0x6e, 0x65, 0x73, 0x73, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x3b, 0x0a, 0x0b, 0x73, 0x74, 0x61, 0x72, 0x74, 0x4c, 0x61, 0x74, 0x4c, 0x6e, 0x67,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x77, 0x69, 0x6b, 0x69, 0x70, 0x61, 0x64,
	0x64, 0x6c, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x61, 0x74, 0x4c, 0x6e,
	0x67, 0x52, 0x0b, 0x73, 0x74, 0x61, 0x72, 0x74, 0x4c, 0x61, 0x74, 0x4c, 0x6e, 0x67, 0x12, 0x37,
	0x0a, 0x09, 0x65, 0x6e, 0x64, 0x4c, 0x61, 0x74, 0x4c, 0x6e, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x19, 0x2e, 0x77, 0x69, 0x6b, 0x69, 0x70, 0x61, 0x64, 0x64, 0x6c, 0x65, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x61, 0x74, 0x4c, 0x6e, 0x67, 0x52, 0x09, 0x65, 0x6e,
	0x64, 0x4c, 0x61, 0x74, 0x4c, 0x6e, 0x67, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6f, 0x6c, 0x79, 0x6c,
	0x69, 0x6e, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x70, 0x6f, 0x6c, 0x79, 0x6c,
	0x69, 0x6e, 0x65, 0x22, 0xba, 0x01, 0x0a, 0x0c, 0x47, 0x75, 0x69, 0x64, 0x65, 0x43, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x12, 0x22, 0x0a, 0x0c, 0x75, 0x73, 0x65, 0x72,
	0x46, 0x75, 0x6c, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x75, 0x73, 0x65, 0x72, 0x46, 0x75, 0x6c, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0d,
	0x75, 0x73, 0x65, 0x72, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x55, 0x72, 0x6c, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x75, 0x73, 0x65, 0x72, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x55,
	0x72, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67,
	0x22, 0x51, 0x0a, 0x21, 0x47, 0x65, 0x74, 0x47, 0x75, 0x69, 0x64, 0x65, 0x43, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x75, 0x69, 0x64, 0x65, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x75, 0x69, 0x64, 0x65, 0x49, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70,
	0x61, 0x67, 0x65, 0x22, 0xa0, 0x01, 0x0a, 0x22, 0x47, 0x65, 0x74, 0x47, 0x75, 0x69, 0x64, 0x65,
	0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x0a, 0x70, 0x61,
	0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d,
	0x2e, 0x77, 0x69, 0x6b, 0x69, 0x70, 0x61, 0x64, 0x64, 0x6c, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x76, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x70,
	0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3b, 0x0a, 0x08, 0x63, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x77, 0x69,
	0x6b, 0x69, 0x70, 0x61, 0x64, 0x64, 0x6c, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x75, 0x69, 0x64, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x08, 0x63, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x22, 0x69, 0x0a, 0x19, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x47, 0x75, 0x69, 0x64, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x75, 0x69, 0x64, 0x65, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x75, 0x69, 0x64, 0x65, 0x49, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x62, 0x6f, 0x64,
	0x79, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x52, 0x61, 0x74, 0x69, 0x6e,
	0x67, 0x32, 0xe7, 0x04, 0x0a, 0x06, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x12, 0x4a, 0x0a, 0x07,
	0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x12, 0x1e, 0x2e, 0x77, 0x69, 0x6b, 0x69, 0x70, 0x61,
	0x64, 0x64, 0x6c, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x77, 0x69, 0x6b, 0x69, 0x70, 0x61,
	0x64, 0x64, 0x6c, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4d, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x47,
	0x75, 0x69, 0x64, 0x65, 0x12, 0x1f, 0x2e, 0x77, 0x69, 0x6b, 0x69, 0x70, 0x61, 0x64, 0x64, 0x6c,
	0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x75, 0x69, 0x64, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x77, 0x69, 0x6b, 0x69, 0x70, 0x61, 0x64, 0x64,
	0x6c, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x75, 0x69, 0x64, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x74, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x47, 0x75,
	0x69, 0x64, 0x65, 0x73, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2d,
	0x2e, 0x77, 0x69, 0x6b, 0x69, 0x70, 0x61, 0x64, 0x64, 0x6c, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x47, 0x75, 0x69, 0x64, 0x65, 0x73, 0x43, 0x6f, 0x6c, 0x6c,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e,
	0x77, 0x69, 0x6b, 0x69, 0x70, 0x61, 0x64, 0x64, 0x6c, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x65, 0x74, 0x47, 0x75, 0x69, 0x64, 0x65, 0x73, 0x43, 0x6f, 0x6c, 0x6c, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5b, 0x0a,
	0x0e, 0x47, 0x65, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x55, 0x73, 0x65, 0x72, 0x12,
	0x28, 0x2e, 0x77, 0x69, 0x6b, 0x69, 0x70, 0x61, 0x64, 0x64, 0x6c, 0x65, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x55, 0x73,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x77, 0x69, 0x6b, 0x69,
	0x70, 0x61, 0x64, 0x64, 0x6c, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73,
	0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x89, 0x01, 0x0a, 0x1a, 0x47,
	0x65, 0x74, 0x47, 0x75, 0x69, 0x64, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x43,
	0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x34, 0x2e, 0x77, 0x69, 0x6b, 0x69,
	0x70, 0x61, 0x64, 0x64, 0x6c, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65,
	0x74, 0x47, 0x75, 0x69, 0x64, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x43, 0x6f,
	0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x35, 0x2e, 0x77, 0x69, 0x6b, 0x69, 0x70, 0x61, 0x64, 0x64, 0x6c, 0x65, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x47, 0x75, 0x69, 0x64, 0x65, 0x43, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x63, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x47, 0x75, 0x69, 0x64, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x2c, 0x2e, 0x77,
	0x69, 0x6b, 0x69, 0x70, 0x61, 0x64, 0x64, 0x6c, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x75, 0x69, 0x64, 0x65, 0x43, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x77, 0x69, 0x6b,
	0x69, 0x70, 0x61, 0x64, 0x64, 0x6c, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x75, 0x69, 0x64, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x42, 0xc2, 0x01, 0x0a, 0x15,
	0x63, 0x6f, 0x6d, 0x2e, 0x77, 0x69, 0x6b, 0x69, 0x70, 0x61, 0x64, 0x64, 0x6c, 0x65, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x76, 0x31, 0x42, 0x0f, 0x57, 0x69, 0x6b, 0x69, 0x70, 0x61, 0x64, 0x64, 0x6c,
	0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x32, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x77, 0x69, 0x6b, 0x69, 0x70, 0x61, 0x64, 0x64, 0x6c, 0x65, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x67, 0x6f, 0x2d, 0x77, 0x69, 0x6b, 0x69,
	0x70, 0x61, 0x64, 0x64, 0x6c, 0x65, 0x3b, 0x61, 0x70, 0x69, 0x76, 0x31, 0xa2, 0x02, 0x03, 0x57,
	0x41, 0x58, 0xaa, 0x02, 0x11, 0x57, 0x69, 0x6b, 0x69, 0x70, 0x61, 0x64, 0x64, 0x6c, 0x65, 0x2e,
	0x41, 0x70, 0x69, 0x2e, 0x56, 0x31, 0xca, 0x02, 0x11, 0x57, 0x69, 0x6b, 0x69, 0x70, 0x61, 0x64,
	0x64, 0x6c, 0x65, 0x5c, 0x41, 0x70, 0x69, 0x5c, 0x56, 0x31, 0xe2, 0x02, 0x1d, 0x57, 0x69, 0x6b,
	0x69, 0x70, 0x61, 0x64, 0x64, 0x6c, 0x65, 0x5c, 0x41, 0x70, 0x69, 0x5c, 0x56, 0x31, 0x5c, 0x47,
	0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x13, 0x57, 0x69, 0x6b,
	0x69, 0x70, 0x61, 0x64, 0x64, 0x6c, 0x65, 0x3a, 0x3a, 0x41, 0x70, 0x69, 0x3a, 0x3a, 0x56, 0x31,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_wikipaddle_proto_rawDescOnce sync.Once
	file_wikipaddle_proto_rawDescData = file_wikipaddle_proto_rawDesc
)

func file_wikipaddle_proto_rawDescGZIP() []byte {
	file_wikipaddle_proto_rawDescOnce.Do(func() {
		file_wikipaddle_proto_rawDescData = protoimpl.X.CompressGZIP(file_wikipaddle_proto_rawDescData)
	})
	return file_wikipaddle_proto_rawDescData
}

var file_wikipaddle_proto_msgTypes = make([]protoimpl.MessageInfo, 18)
var file_wikipaddle_proto_goTypes = []interface{}{
	(*GetGuidesCollectionRequest)(nil),         // 0: wikipaddle.api.v1.GetGuidesCollectionRequest
	(*GetGuidesCollectionResponse)(nil),        // 1: wikipaddle.api.v1.GetGuidesCollectionResponse
	(*GuideCollectionItemPhoto)(nil),           // 2: wikipaddle.api.v1.GuideCollectionItemPhoto
	(*GuideCollectionItem)(nil),                // 3: wikipaddle.api.v1.GuideCollectionItem
	(*GetCurrentUserRequest)(nil),              // 4: wikipaddle.api.v1.GetCurrentUserRequest
	(*Pagination)(nil),                         // 5: wikipaddle.api.v1.Pagination
	(*UserRequest)(nil),                        // 6: wikipaddle.api.v1.UserRequest
	(*User)(nil),                               // 7: wikipaddle.api.v1.User
	(*UserResponse)(nil),                       // 8: wikipaddle.api.v1.UserResponse
	(*GuideRequest)(nil),                       // 9: wikipaddle.api.v1.GuideRequest
	(*GuideResponse)(nil),                      // 10: wikipaddle.api.v1.GuideResponse
	(*LatLng)(nil),                             // 11: wikipaddle.api.v1.LatLng
	(*Guide)(nil),                              // 12: wikipaddle.api.v1.Guide
	(*FitnessActivity)(nil),                    // 13: wikipaddle.api.v1.FitnessActivity
	(*GuideComment)(nil),                       // 14: wikipaddle.api.v1.GuideComment
	(*GetGuideCommentsCollectionRequest)(nil),  // 15: wikipaddle.api.v1.GetGuideCommentsCollectionRequest
	(*GetGuideCommentsCollectionResponse)(nil), // 16: wikipaddle.api.v1.GetGuideCommentsCollectionResponse
	(*CreateGuideCommentRequest)(nil),          // 17: wikipaddle.api.v1.CreateGuideCommentRequest
}
var file_wikipaddle_proto_depIdxs = []int32{
	5,  // 0: wikipaddle.api.v1.GetGuidesCollectionResponse.pagination:type_name -> wikipaddle.api.v1.Pagination
	3,  // 1: wikipaddle.api.v1.GetGuidesCollectionResponse.guides:type_name -> wikipaddle.api.v1.GuideCollectionItem
	2,  // 2: wikipaddle.api.v1.GuideCollectionItem.photos:type_name -> wikipaddle.api.v1.GuideCollectionItemPhoto
	7,  // 3: wikipaddle.api.v1.UserResponse.user:type_name -> wikipaddle.api.v1.User
	12, // 4: wikipaddle.api.v1.GuideResponse.guide:type_name -> wikipaddle.api.v1.Guide
	11, // 5: wikipaddle.api.v1.Guide.startLatLng:type_name -> wikipaddle.api.v1.LatLng
	11, // 6: wikipaddle.api.v1.Guide.endLatLng:type_name -> wikipaddle.api.v1.LatLng
	11, // 7: wikipaddle.api.v1.FitnessActivity.startLatLng:type_name -> wikipaddle.api.v1.LatLng
	11, // 8: wikipaddle.api.v1.FitnessActivity.endLatLng:type_name -> wikipaddle.api.v1.LatLng
	5,  // 9: wikipaddle.api.v1.GetGuideCommentsCollectionResponse.pagination:type_name -> wikipaddle.api.v1.Pagination
	14, // 10: wikipaddle.api.v1.GetGuideCommentsCollectionResponse.comments:type_name -> wikipaddle.api.v1.GuideComment
	6,  // 11: wikipaddle.api.v1.Mobile.GetUser:input_type -> wikipaddle.api.v1.UserRequest
	9,  // 12: wikipaddle.api.v1.Mobile.GetGuide:input_type -> wikipaddle.api.v1.GuideRequest
	0,  // 13: wikipaddle.api.v1.Mobile.GetGuidesCollection:input_type -> wikipaddle.api.v1.GetGuidesCollectionRequest
	4,  // 14: wikipaddle.api.v1.Mobile.GetCurrentUser:input_type -> wikipaddle.api.v1.GetCurrentUserRequest
	15, // 15: wikipaddle.api.v1.Mobile.GetGuideCommentsCollection:input_type -> wikipaddle.api.v1.GetGuideCommentsCollectionRequest
	17, // 16: wikipaddle.api.v1.Mobile.CreateGuideComment:input_type -> wikipaddle.api.v1.CreateGuideCommentRequest
	8,  // 17: wikipaddle.api.v1.Mobile.GetUser:output_type -> wikipaddle.api.v1.UserResponse
	10, // 18: wikipaddle.api.v1.Mobile.GetGuide:output_type -> wikipaddle.api.v1.GuideResponse
	1,  // 19: wikipaddle.api.v1.Mobile.GetGuidesCollection:output_type -> wikipaddle.api.v1.GetGuidesCollectionResponse
	8,  // 20: wikipaddle.api.v1.Mobile.GetCurrentUser:output_type -> wikipaddle.api.v1.UserResponse
	16, // 21: wikipaddle.api.v1.Mobile.GetGuideCommentsCollection:output_type -> wikipaddle.api.v1.GetGuideCommentsCollectionResponse
	14, // 22: wikipaddle.api.v1.Mobile.CreateGuideComment:output_type -> wikipaddle.api.v1.GuideComment
	17, // [17:23] is the sub-list for method output_type
	11, // [11:17] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_wikipaddle_proto_init() }
func file_wikipaddle_proto_init() {
	if File_wikipaddle_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_wikipaddle_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGuidesCollectionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wikipaddle_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGuidesCollectionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wikipaddle_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GuideCollectionItemPhoto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wikipaddle_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GuideCollectionItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wikipaddle_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCurrentUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wikipaddle_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Pagination); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wikipaddle_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wikipaddle_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*User); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wikipaddle_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wikipaddle_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GuideRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wikipaddle_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GuideResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wikipaddle_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LatLng); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wikipaddle_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Guide); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wikipaddle_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FitnessActivity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wikipaddle_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GuideComment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wikipaddle_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGuideCommentsCollectionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wikipaddle_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGuideCommentsCollectionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wikipaddle_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateGuideCommentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_wikipaddle_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   18,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_wikipaddle_proto_goTypes,
		DependencyIndexes: file_wikipaddle_proto_depIdxs,
		MessageInfos:      file_wikipaddle_proto_msgTypes,
	}.Build()
	File_wikipaddle_proto = out.File
	file_wikipaddle_proto_rawDesc = nil
	file_wikipaddle_proto_goTypes = nil
	file_wikipaddle_proto_depIdxs = nil
}
